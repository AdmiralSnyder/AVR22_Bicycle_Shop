@page "/UnityRemoteControl"
@using AdminPanelBlazorServer.Components
@using Microsoft.AspNetCore.SignalR.Client;

<div style="background-color:rosybrown;padding:20px;">
    <RemoteController></RemoteController>
    <div>
        <h3>Sicherheitszentrale</h3>

        <table>
            <tr>
                <td>
                    <GameCapture ImageTag="GameCapture" Title="Player"></GameCapture>
                </td>
            </tr>
            <tr>
                <td>
                    <GameCapture ImageTag="ShopCamera"></GameCapture>
                </td>
                <td>
                    <GameCapture ImageTag="OutsideCamera"></GameCapture>
                </td>
                <td>
                    <GameCapture ImageTag="WorkshopCamera1"></GameCapture>
                </td>
            </tr>
            <tr>
                <td>
                    <GameCapture ImageTag="WorkshopCamera2"></GameCapture>
                </td>
                <td>
                    <GameCapture ImageTag="StorageCamera1"></GameCapture>
                </td>
                <td>
                    <GameCapture ImageTag="StorageCamera2"></GameCapture>
                </td>
            </tr>
        </table>
    </div>

    @*<button @onclick=TakeScreenshot>Take Screenshot</button>*@
    <ScreenshotSource @ref=ScreenshotSrc>
        <strong>Fahradbestellsystem</strong>
        <div style="width:280px;height:280px;background-color:teal;">
            <input type="text" @oninput=TakeScreenshot @onchange=TakeScreenshot />
            <input type="text" @oninput=TakeScreenshot @onchange=TakeScreenshot />
            <input type="text" @oninput=TakeScreenshot @onchange=TakeScreenshot />
            <input type="text" @oninput=TakeScreenshot @onchange=TakeScreenshot />
        </div>
    </ScreenshotSource>
    <ScreenshotTarget SourceFunc=@(() => ScreenshotSrc) @ref=ScreenshotTrg></ScreenshotTarget>

</div>
@code
{
    private ScreenshotSource ScreenshotSrc { get; set; }
    private ScreenshotTarget ScreenshotTrg { get; set; }
    [Inject]
    private HubConnector HubConn { get; set; }

    private async void TakeScreenshot() => ScreenshotTrg.TakeScreenshot();

    protected override async Task OnInitializedAsync()
    {
        if (HubConn.Connection.State == HubConnectionState.Disconnected)
        {
            await HubConn.Connection.StartAsync();
        }
    }
}